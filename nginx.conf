events {
    worker_connections 1024;
}

http {
    upstream backend {
        server backend:8000;
    }

    # upstream frontend {
    #     server frontend:3000;
    # }

    server {
        listen 80;
        server_name localhost;
        return 301 https://$host$request_uri;  # Redirect HTTP to HTTPS
    }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/ssl/certs/certificate.crt;
        ssl_certificate_key /etc/ssl/private/certificate.key;
        ssl_protocols TLSv1.2 TLSv1.3;

        # location /frontend {
        #     rewrite ^/frontend/(.*)$ /$1 break;
        #     proxy_pass http://frontend;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # }
        location /backend {
            rewrite ^/backend/(.*)$ /$1 break;
            proxy_pass https://backend;  # Ensure the backend uses HTTPS if needed
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
